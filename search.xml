<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS</title>
      <link href="/2019/11/16/css-de-zhi-shi-chu-bei/"/>
      <url>/2019/11/16/css-de-zhi-shi-chu-bei/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-Cascading-style-sheet"><a href="#CSS-Cascading-style-sheet" class="headerlink" title="CSS - Cascading style sheet"></a>CSS - Cascading style sheet</h1><p>父元素的某些css属性会被子元素继承。</p><p>在css中定义尺寸通常使用px(pixels)作为单位,也可以用%,vh,vw等。</p><p>子元素的style能覆盖父元素的style。</p><p>对于block element可以用width,height来控制它的宽度与高度。</p><p>max-width属性可以定义元素的最大宽度。</p><p>到网上可以查询所有的css属性。</p><h2 id="Colors"><a href="#Colors" class="headerlink" title="Colors"></a>Colors</h2><p>style=”color:颜色名/#十六进制/rgb()/rgba()/hsl()” </p><p>HSL即色相、饱和度、亮度（英语：Hue, Saturation, Lightness）。</p><p>可以用网上的color picker来获取绝大部分颜色。</p><p>background-color:背景颜色</p><p>在设置color时，最好用rgba()，这样更灵活，方便JSP等操作。</p><p>一般来说低级标题要比高级标题颜色要更亮一些，如h2的颜色比h1亮一些。</p><p>可以用background-size:来确定背景的大小，缩放背景图片。</p><h2 id="Gradient-渐变"><a href="#Gradient-渐变" class="headerlink" title="Gradient 渐变"></a>Gradient 渐变</h2><h3 id="linear-gradient-线性渐变"><a href="#linear-gradient-线性渐变" class="headerlink" title="linear-gradient    线性渐变"></a>linear-gradient    线性渐变</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><pre class=" language-css"><code class="language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>direction, color-stop<span class="token number">1</span>, color-stop<span class="token number">2</span>, <span class="token number">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="使用角度"><a href="#使用角度" class="headerlink" title="使用角度"></a>使用角度</h4><p>如果你想要在渐变的方向上做更多的控制，你可以定义一个角度，而不用预定义方向（to bottom、to top、to right、to left、to bottom right，等等）。</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><pre class=" language-css"><code class="language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>angle, color-stop<span class="token number">1</span>, color-stop<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>角度是指水平线和渐变线之间的角度，逆时针方向计算。换句话说，0deg 将创建一个从下到上的渐变，90deg 将创建一个从左到右的渐变。</p><img src="https://www.runoob.com/wp-content/uploads/2014/07/7B0CC41A-86DC-4E1B-8A69-A410E6764B91.jpg" style="zoom:50%;" /><p>但是，请注意很多浏览器(Chrome,Safari,friefox等)的使用了旧的标准，即 0deg 将创建一个从左到右的渐变，90deg 将创建一个从下到上的渐变。换算公式 90 - x = y 其中 x 为标准角度，y为非标准角度。</p><h4 id="使用透明度（transparent）"><a href="#使用透明度（transparent）" class="headerlink" title="使用透明度（transparent）"></a>使用透明度（transparent）</h4><p>CSS3 渐变也支持透明度（transparent），可用于创建减弱变淡的效果。</p><p>为了添加透明度，我们使用 rgba() 函数来定义颜色结点。rgba() 函数中的最后一个参数可以是从 0 到 1 的值，它定义了颜色的透明度：0 表示完全透明，1 表示完全不透明。</p><p>下面的实例演示了从左边开始的线性渐变。起点是完全透明，慢慢过渡到完全不透明的红色：</p><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p>从左到右的线性渐变，带有透明度：</p><p>#grad {  background-image: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1)); }</p><h4 id="重复的线性渐变"><a href="#重复的线性渐变" class="headerlink" title="重复的线性渐变"></a>重复的线性渐变</h4><p>repeating-linear-gradient() 函数用于重复线性渐变：</p><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><p>一个重复的线性渐变：</p><p>#grad {  /* 标准的语法 */  background-image: repeating-linear-gradient(red, yellow 10%, green 20%); }</p><h3 id="radial-gradient-径向渐变"><a href="#radial-gradient-径向渐变" class="headerlink" title="radial-gradient    径向渐变"></a>radial-gradient    径向渐变</h3><p>径向渐变由它的中心定义。</p><p>为了创建一个径向渐变，你也必须至少定义两种颜色结点。颜色结点即你想要呈现平稳过渡的颜色。同时，你也可以指定渐变的中心、形状（圆形或椭圆形）、大小。默认情况下，渐变的中心是 center（表示在中心点），渐变的形状是 ellipse（表示椭圆形），渐变的大小是 farthest-corner（表示到最远的角落）。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/07/gradient_radial.jpg" alt="img"></p><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><pre class=" language-css"><code class="language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">radial-gradient</span><span class="token punctuation">(</span>shape size at position, start-color, <span class="token number">...</span>, last-color<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>径向渐变 - 颜色结点均匀分布（默认情况下）</p><p>#grad {  background-image: radial-gradient(red, yellow, green); }</p><p>径向渐变 - 颜色结点不均匀分布</p><p>#grad {  background-image: radial-gradient(red 5%, yellow 15%, green 60%); }</p><h4 id="设置形状"><a href="#设置形状" class="headerlink" title="设置形状"></a>设置形状</h4><p>shape 参数定义了形状。它可以是值 circle 或 ellipse。其中，circle 表示圆形，ellipse 表示椭圆形。默认值是 ellipse。</p><p>#grad {  background-image: radial-gradient(circle, red, yellow, green); }</p><h4 id="重复的径向渐变"><a href="#重复的径向渐变" class="headerlink" title="重复的径向渐变"></a>重复的径向渐变</h4><p>repeating-radial-gradient() 函数用于重复径向渐变：</p><p>#grad {  background-image: repeating-radial-gradient(red, yellow 10%, green 15%); }</p><h3 id="Gradient-tips"><a href="#Gradient-tips" class="headerlink" title="Gradient tips:"></a>Gradient tips:</h3><p>如linear-gradient(to right,rgb(94,255,126,),rgba(94,255,126,0))可以实现从左端至右端由rgb(94,255,126,)色向无色的渐变。</p><p>linear-gradient(to top right,rgb(94,255,126,),rgba(94,255,126,0))可以实现向右上的渐变。</p><p>↑为0deg，还可以用角度来控制方向,-90deg为←方向。</p><h2 id="Margin-amp-Padding"><a href="#Margin-amp-Padding" class="headerlink" title="Margin &amp; Padding"></a>Margin &amp; Padding</h2><p>margin，padding的图解可以参考盒子模型。</p><p>可以通过padding-top等来单独控制某一padding</p><p>也可以通过padding：1 2 3 4 （top right bottom left)来单独控制</p><p>margin:1 2 3 4 与padding相似</p><p>margin可以取负值，但使用的时候要小心。</p><h2 id="Display-amp-Float"><a href="#Display-amp-Float" class="headerlink" title="Display &amp; Float"></a>Display &amp; Float</h2><p>style=”float:left/right/none”</p><p>对于float的元素，其他元素布局在它周围</p><p>dispaly:block/inline/none/inline-block</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>不会继承父级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>的display属性,可以使用display:inherit来继承</code></pre><p>可以到网上查更多的display属性。</p><h2 id="Display-inline-block布局"><a href="#Display-inline-block布局" class="headerlink" title="Display:inline-block布局"></a>Display:inline-block布局</h2><h3 id="1-解释一下display的几个常用的属性值，inline-，-block，-inline-block"><a href="#1-解释一下display的几个常用的属性值，inline-，-block，-inline-block" class="headerlink" title="1.解释一下display的几个常用的属性值，inline ， block， inline-block"></a><strong>1.解释一下display的几个常用的属性值，inline ， block， inline-block</strong></h3><ul><li>inline（行内元素）:<ol><li>使元素变成行内元素，拥有行内元素的特性，即可以与其他行内元素共享一行，不会独占一行. </li><li>不能更改元素的height，width的值，大小由内容撑开. </li><li>可以使用padding上下左右都有效，margin只有left和right产生边距效果，但是top和bottom就不行.</li></ol></li><li>block（块级元素）:<ol><li>使元素变成块级元素，独占一行，在不设置自己的宽度的情况下，块级元素会默认填满父级元素的宽度. </li><li><em>能够改变元素的height，width的值.</em> </li><li><strong>可以设置padding，margin的各个属性值，top，left，bottom，right都能够产生边距效果.</strong></li></ol></li><li>inline-block（融合行内与块级）:<ol><li>结合了inline与block的一些特点，结合了上述inline的第1个特点和block的第2,3个特点.</li><li>用通俗的话讲，就是不独占一行的块级元素。如图:</li></ol></li></ul><p>图一:<br><img src="https://wx1.sinaimg.cn/mw690/006AeIDuly1g9kpe5exkbj30bh06qwed.jpg" alt="img"><br>图二：<br><img src="https://wx1.sinaimg.cn/mw690/006AeIDuly1g9kpe5f1fwj30cs04cwed.jpg" alt="img"></p><p>两个图可以看出，display：inline-block后块级元素能够在同一行显示，有人说这不就像浮动一样吗。没错，display：inline-block的效果几乎和浮动一样，但也有不同，接下来讲一下inline-block和浮动的比较。</p><h3 id="2-inline-block布局-vs-浮动布局"><a href="#2-inline-block布局-vs-浮动布局" class="headerlink" title="2.inline-block布局 vs 浮动布局"></a><strong>2.inline-block布局 vs 浮动布局</strong></h3><h4 id="a-不同之处："><a href="#a-不同之处：" class="headerlink" title="a.不同之处："></a><strong>a.不同之处：</strong></h4><p>对元素设置display：inline-block ，元素不会脱离文本流，而float就会使得元素脱离文本流，且还有父元素高度坍塌的效果</p><h4 id="b-相同之处："><a href="#b-相同之处：" class="headerlink" title="b.相同之处："></a><strong>b.相同之处：</strong></h4><p>能在某程度上达到一样的效果</p><p>　　我们先来看看这两种布局：<br>图一：display：inline-block<br><img src="https://wx1.sinaimg.cn/mw690/006AeIDuly1g9kpe5f1fwj30cs04cwed.jpg" alt="img"><br>图二：对两个孩子使用float：left，我在上一篇浮动布局讲过，这是父元素会高度坍塌，所以要闭合浮动，对box使用overflow：hidden，效果如下：<br><img src="https://wx3.sinaimg.cn/mw690/006AeIDuly1g9kpe5g6kqj30b903tmx0.jpg" alt="img"></p><p>&gt;&gt;乍一看两个都能做到几乎相同的效果，（仔细看看display：inline-block中有间隙问题，这个留到下面再讲）</p><h4 id="c-浮动布局不太好的地方："><a href="#c-浮动布局不太好的地方：" class="headerlink" title="　　c.浮动布局不太好的地方："></a>　　<strong>c.浮动布局不太好的地方：</strong></h4><p>参差不齐的现象，我们看一个效果：<br>图三：<br><img src="https://wx4.sinaimg.cn/mw690/006AeIDuly1g9kpe5iql2j30hw067jrd.jpg" alt="img"><br>图四：<br><img src="https://wx4.sinaimg.cn/mw690/006AeIDuly1g9kpe5iaj8j30gb06z749.jpg" alt="img"><br>&gt;&gt;从图3,4可以看出浮动的局限性在于，若要元素排满一行，换行后还要整齐排列，就要子元素的高度一致才行，不然就会出现图三的效果，而inline-block就不会。</p><h3 id="3-inline-block存在的小问题："><a href="#3-inline-block存在的小问题：" class="headerlink" title="3.inline-block存在的小问题："></a><strong>3.inline-block存在的小问题：</strong></h3><p>　　<strong>a</strong>.上面可以看到用了display:inline-block后，存在间隙问题，间隙为4像素，这个问题产生的原因是换行引起的，因为我们写标签时通常会在标签结束符后顺手打个回车，而回车会产生回车符，回车符相当于空白符，通常情况下，多个连续的空白符会合并成一个空白符，而产生“空白间隙”的真正原因就是这个让我们并不怎么注意的空白符。</p><p>　　<strong>b.</strong>去除空隙的方法：<br>　　1.对父元素添加，{font-size:0}，即将字体大小设为0，那么那个空白符也变成0px，从而消除空隙<br>　　现在这种方法已经可以兼容各种浏览器，以前chrome浏览器是不兼容的<br>图一：<br><img src="https://wx1.sinaimg.cn/mw690/006AeIDuly1g9kpe5k6llj30dh06ga9v.jpg" alt="img"></p><p>　　<strong>c.</strong>浏览器兼容性：ie6/7是不兼容 display：inline-block的所以要额外处理一下：<br>　　在ie6/7下：<br>　　对于行内元素直接使用{dislplay:inline-block;}<br>　　对于块级元素：需添加{display:inline;zoom:1;}</p><h3 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结:"></a><strong>4.总结:</strong></h3><p>　　display：inline-block的布局方式和浮动的布局方式，究竟使用哪个，我觉得应该根据实际情况来决定的：<br>　　a.对于横向排列东西来说，我更倾向与使用inline-block来布局，因为这样清晰，也不用再像浮动那样清除浮动，害怕布局混乱等等。<br>　　b.对于浮动布局就用于需要文字环绕的时候，毕竟这才是浮动真正的用武之地，水平排列的是就交给inline-block了。</p><p>作者：Ry-yuan</p><p>转载出处，本文地址：<a href="http://www.cnblogs.com/Ry-yuan/p/6848197.html" target="_blank" rel="noopener">http://www.cnblogs.com/Ry-yuan/p/6848197.html</a></p><h2 id="Position-static-relative-absolute-fixed"><a href="#Position-static-relative-absolute-fixed" class="headerlink" title="Position:static,relative,absolute,fixed"></a>Position:static,relative,absolute,fixed</h2><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><p>default position是static。</p><h3 id="relative"><a href="#relative" class="headerlink" title="relative"></a>relative</h3><p>relative:相对于原先的位置来确定自己的位置。(可移动)</p><p>style=”position:relative; top: ;right:;bottom:;left:;”来控制移动。</p><h3 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h3><p>元素会按照最近的父元素来确定自己的位置。</p><p>即：如果元素在一个容器内，它便根据容器的位置来调整自己的位置；不在容器中的话它就会依据整个文档来调整位置。</p><p>添加absolute后元素会脱离原先的文档流，浮在最上面一层。</p><p>父元素为relative时，absolute的子元素才会相对于父元素定位，否则直接相对于整个html来定位。</p><h3 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h3><p>相对于浏览器窗口固定，即使滑动视窗，元素也会相对于视窗位置不变。</p><p>与absolute一样，fixed元素也会浮在文档流的最上面一层。</p><h2 id="Shadows-opacity-amp-border-radius"><a href="#Shadows-opacity-amp-border-radius" class="headerlink" title="Shadows,opacity &amp; border radius"></a>Shadows,opacity &amp; border radius</h2><h3 id="opacity"><a href="#opacity" class="headerlink" title="opacity"></a>opacity</h3><p>不透明度 ，范围:0.0-1.0</p><h3 id="text-shadow"><a href="#text-shadow" class="headerlink" title="text-shadow"></a>text-shadow</h3><p>text-shadow: 1 2 3</p><p>1是水平范围的shadow宽度</p><p>2是垂直方向的</p><p>3 shadow color</p><p>在3的前面还可以加第四个参数控制blur（模糊）半径</p><p>对于图片img可以采用box-shadow，它与text-shadow用法相同。</p><p>用grey作为img的shadow color一般来说效果很好。</p><h3 id="border-radius"><a href="#border-radius" class="headerlink" title="border-radius"></a>border-radius</h3><p>控制border边角的弧度半径</p><p>单位可用px与%</p><p><img src="https://wx2.sinaimg.cn/mw690/006AeIDuly1g9i4hoy6z9j308x04qq2u.jpg" alt="img"></p><h2 id="Text-amp-Font"><a href="#Text-amp-Font" class="headerlink" title="Text &amp; Font"></a>Text &amp; Font</h2><h3 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h3><p>text-decoration:none;</p><p>​                            line-through;    <del>abc</del></p><p>​                            overline;        abc上划线</p><p>​                            underline;     <u>abc</u></p><hr><p>text-transform:capitalize; 每个单词的首字母都大写</p><p>​                            uppercase；所有字母都大写</p><hr><p>text-align：left；</p><p>​                    right；</p><p>​                    center；</p><p>​                    justify；使文本的两端对齐，文本行的左右两端在父元素的内边界上。然后调整单词和字母的间隔，使各行的长度恰好相等。</p><h3 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h3><p>em:设计字体大小时，推荐使用的单位。代表相对于默认字体尺寸的大小</p><p>网页默认字体尺寸为16px</p><hr><p>font-family:字体种类</p><p>​                    :sans-serif;</p><p>​                    :”Times New Roman”,serif; 如果值中有空格就要用引号。</p><p>​                    :Georgia</p><p>​                    :Arial</p><p>选取font-family时可以用google fonts，设置的时候可以多选取几个作为backup，以免某一个不被浏览器显示。</p><hr><p>font-style:italic 斜体</p><p>​                 :oblique 斜体     一些字体只有正常体，用italic没有效果，这时候就要用oblique让没有斜体属性的文字倾斜。</p><p>font-variant:small-caps    除了开头字母是大的，其他字母都变为尺寸更小的大写字母</p><p>font-weight:bold 字体加粗</p><p>font-size:最好用em</p><h3 id="External-Font"><a href="#External-Font" class="headerlink" title="External Font"></a>External Font</h3><p><code>&lt;link&gt;</code>&amp; use font-family</p><h2 id="External-Style-Sheets"><a href="#External-Style-Sheets" class="headerlink" title="External Style Sheets"></a>External Style Sheets</h2><ol><li>inline style: 如<code>&lt;p style=&quot;&quot;&gt;&lt;/p&gt;</code></li><li><code>&lt;style&gt;xxxxx&lt;/style&gt;</code></li><li>external dot css file:<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;xxxx&quot;</code>&gt;</li></ol><p>3的优点是同个.css文件能被多个.html文件引用</p><h2 id="Id-amp-Classs"><a href="#Id-amp-Classs" class="headerlink" title="Id &amp; Classs"></a>Id &amp; Classs</h2><h3 id="Id"><a href="#Id" class="headerlink" title="Id"></a>Id</h3><p>一个元素只能给一个id</p><p>而一个元素可以用多个class</p><p>对css来说id与class差不多，但对于JSP等语言来说，id能做的事情更多。</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><h4 id="CSS-selector"><a href="#CSS-selector" class="headerlink" title="CSS selector"></a>CSS selector</h4><p>*{css style}    则整个html文件都会被选择，css样式会被应用到整个页面。</p><p>h2, h1{css style}    则h2与h1元素都会被选择</p><p>ul&gt;li{css style}    则只有是ul下一级的li元素们才会被选择</p><p>div+p{css style}    选择紧接在div元素之后的p元素们</p><p>h2+a{css style}与h2~a{css style}不同，前者选择同一父元素下的紧接在h2后面的a元素，而后者选择同一父元素下的在h2后面的a元素，不必紧接。</p><p>[attr]{css style}    选择所有具有该属性的元素</p><p>li[title=”lemons”]{css style}    选择所有具有title=”lemons”属性的li元素</p><p>[title *= “lem”]{css style}    选择title属性中包含“lem”子串的元素</p><p>[attribute ^= value]可以同attribute值等于value,或者attribute值以value开头后面跟任意字符的情况匹配;</p><p>[attribute |= value]可以同attribute值等于value,或者attribute值以value开头且后面只能紧跟 “-” 字符的情况配;即[attribute|=value] 这种情况下 value必须是整个单词 或者以value开头且后面只能紧跟 “-” 字符的情况。</p><p>可以说[attribute 丨=value]限定更严格。只要[attribute 丨=value]能匹配到的情况，[attribute ^= value]都能匹配到。 [attribute 丨=value]是[attribute ^= value]的 “子集”。</p><p>如：subtitle-20933 与 subtitle-45459 遇到这种情况[attribute |= value]的作用就发挥出来了。</p><p>input:checked{css style} 选择每个被选中的<code>&lt;input&gt;</code>元素</p><p>​         :focus{css style} 同理</p><p>li:only-child{css style}    只会选择li为唯一子元素的元素</p><p>可以用a:link {}与 :visited{}伪类选择器来自定义链接被访问前与被访问后的css样式。</p><p>如果a元素有id用#id:link{}也可以。</p><h4 id="组合运用："><a href="#组合运用：" class="headerlink" title="组合运用："></a>组合运用：</h4><p>input[type=”checkbox”]:checked{css style}</p><p>则只有type属性为checkbox的input元素在被勾选时才能被选中。</p><p>h2:hover{css style} 鼠标在h2上才会被选择。</p><p>ul&gt;li:first-child {css style}    ul下的第一个li子元素会被选择。</p><p>​        :last-child{css style}    同上</p><p>​        :nth-last-child(num){css style}    ul下的第一级倒数第num个li元素会被选择</p><h4 id="Css-selector-tips"><a href="#Css-selector-tips" class="headerlink" title="Css selector tips:"></a>Css selector tips:</h4><p>如果要设置ul下的first-child li的color为yellow</p><p>ul:first-child {</p><p>color: yellow;</p><p>}这样是没用的。上述css只对ul下嵌套的第一个子ul有效。</p><p>要实现上述效果需这样写：<br>li:first-child {</p><p>color: yellow;</p><p>}</p><h2 id="Selectors-Specificity"><a href="#Selectors-Specificity" class="headerlink" title="Selectors Specificity"></a>Selectors Specificity</h2><p>Note: Specificity is a common reason why your CSS-rules don’t apply to some elements, although you think they should.</p><p>Specificity Hierarchy<br>Every selector has its place in the specificity hierarchy. There are four categories which define the specificity level of a selector:</p><p>Inline styles - An inline style is attached directly to the element to be styled. Example: <code>&lt;h1 style=&quot;color: #ffffff;&quot;&gt;</code>.</p><p>IDs - An ID is a unique identifier for the page elements, such as #navbar.</p><p>Classes, attributes and pseudo-classes - This category includes .classes, [attributes] and pseudo-classes such as :hover, :focus etc.</p><p>Elements and pseudo-elements - This category includes element names and pseudo-elements, such as h1, div, :before and :after.</p><h3 id="How-to-Calculate-Specificity"><a href="#How-to-Calculate-Specificity" class="headerlink" title="How to Calculate Specificity?"></a>How to Calculate Specificity?</h3><p>Memorize how to calculate specificity!</p><p>Start at 0, add 1000 for style attribute, add 100 for each ID, add 10 for each attribute, class or pseudo-class, add 1 for each element name or pseudo-element.</p><p>来源：<a href="https://www.w3schools.com/css/css_specificity.asp" target="_blank" rel="noopener">https://www.w3schools.com/css/css_specificity.asp</a></p><h2 id="Flexbox"><a href="#Flexbox" class="headerlink" title="Flexbox"></a>Flexbox</h2><p><img src="https://wx3.sinaimg.cn/mw690/006AeIDuly1g9ip52vvkdj30y60i84al.jpg" alt="img"></p><p><img src="https://wx2.sinaimg.cn/mw690/006AeIDuly1g9ip567l9kj30z70i57ge.jpg" alt="img"></p><p>使元素能动态地响应页面大小。                                                                    </p><p>display:flex;                                                                                                    </p><p>更详细地使用flexbox方法参考以下pdf：</p><p><a href="/pdf/flexboxsheet.pdf">flexbox cheatsheet</a></p><h3 id="Flex-grow-flex-shrink-flex-basis"><a href="#Flex-grow-flex-shrink-flex-basis" class="headerlink" title="Flex-grow,flex-shrink,flex-basis:"></a>Flex-grow,flex-shrink,flex-basis:</h3><p>在flex布局中，父元素在不同宽度下，子元素是如何分配父元素空间的。</p><p>(注意：这三个属性都是在子元素上设置的，下面小编要讲的是父元素，指以flex布局的元素(display:flex))</p><p>小编这里先教一下大家如何快速记住这三个属性：</p><p>首先是   flex-basis  ，basis英文意思是&lt;主要成分&gt;，所以他和width放在一起时,肯定把width干掉，basis遇到width时就会说我才是最主要的成分，你是次要成分，所以见到我的时候你要靠边站。</p><p>其次是   flex-grow，grow英文意思是&lt;扩大，扩展，增加&gt;,这就代表当父元素的宽度大于子元素宽度之和时，并且父元素有剩余，这时，flex-grow就会说我要成长，我要长大，怎么样才能成长呢，当然是分享父元素的空间了。见下面第二个属性的内容</p><p>最后是   flex-shrink， shrink英文意思是收缩，这就代表当父元素的宽度小于子元素宽度之和时，并且超出了父元素的宽度，这时，flex-shrink就会说外面的世界太苦了，我还是回到父亲的怀抱中去吧！因此，flex-shrink就会按照一定的比例进行收缩。见下面第三个属性的内容</p><h4 id="第一个属性：flex-basis"><a href="#第一个属性：flex-basis" class="headerlink" title="第一个属性：flex-basis"></a>第一个属性：flex-basis</h4><p>该属性用来设置元素的宽度，其实，width也可以设置宽度。如果元素上同时设置了width和flex-basis，那么width 的值就会被flex-basis覆盖掉。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>见下图：小编我把宽度设置为width:200px;  flex-basis:300px;结果显示表明子元素.inner应用了属性flex-basis;</p><p><img src="https://img-blog.csdn.net/20180621202401102?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><h4 id="第二个属性：flex-grow"><a href="#第二个属性：flex-grow" class="headerlink" title="第二个属性：flex-grow"></a>第二个属性：flex-grow</h4><p>该属性用来设置当父元素的宽度大于所有子元素的宽度的和时（即父元素会有剩余空间），子元素如何分配父元素的剩余空间。 flex-grow的默认值为0，意思是该元素不索取父元素的剩余空间，如果值大于0，表示索取。值越大，索取的越厉害。</p><p> 举个例子: 父元素宽400px，有两个子元素：A和B。A宽为100px，B宽为200px。 则空余空间为 400-（100+200）= 100px。 如果A，B都不索取剩余空间，则有100px的空余空间。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inner1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid red<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span><span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.inner1</span></span><span class="token punctuation">{</span> <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>见下图：</p><p><img src="https://img-blog.csdn.net/20180621203513551?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p> 如果A索取剩余空间:设置flex-grow为1，B不索取。则最终A的大小为 自身宽度（100px）+ 剩余空间的宽度（100px）= 200px 。</p><pre class=" language-css"><code class="language-css"> <span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>            <span class="token property">flex-grow</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.inner1</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre><p>见下图：</p><p><img src="https://img-blog.csdn.net/20180621203737948?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>如果A，B都设索取剩余空间，A设置flex-grow为1，B设置flex-grow为2。则最终A的大小为 自身宽度（100px）+ A获得的剩余空间的宽度（100px (1/(1+2))）,最终B的大小为 自身宽度（200px）+ B获得的剩余空间的宽度（100px (2/(1+2))）(这里呢小编只给了公式，小伙伴们可以自己去算一下)</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>            <span class="token property">flex-grow</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.inner1</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>            <span class="token property">flex-grow</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre><p>见下图：</p><p><img src="https://img-blog.csdn.net/20180621203513551?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><h4 id="第三个属性：flex-shrink"><a href="#第三个属性：flex-shrink" class="headerlink" title="第三个属性：flex-shrink"></a>第三个属性：flex-shrink</h4><p>该属性用来设置，当父元素的宽度小于所有子元素的宽度的和时（即子元素会超出父元素），子元素如何缩小自己的宽度的。 flex-shrink的默认值为1，当父元素的宽度小于所有子元素的宽度的和时，子元素的宽度会减小。值越大，减小的越厉害。如果值为0，表示不减小。</p><p> 举个例子: 父元素宽400px，有两子元素：A和B。A宽为200px，B宽为300px。 则A，B总共超出父元素的宽度为(200+300)- 400 = 100px。 如果A，B都不减小宽度，即都设置flex-shrink为0，则会有100px的宽度超出父元素。 </p><pre class=" language-css"><code class="language-css"> <span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span>        <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span>         <span class="token property">flex-shrink</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.inner1</span></span><span class="token punctuation">{</span>        <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>        <span class="token property">flex-shrink</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>见下图：</p><p><img src="https://img-blog.csdn.net/20180621204844467?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>如果A不减小宽度:设置flex-shrink为0，B减小。则最终B的大小为 自身宽度(300px)- 总共超出父元素的宽度(100px)= 200px </p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span>             <span class="token property">flex-shrink</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.inner1</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>            <span class="token property">flex-shrink</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>见下图：</p><p><img src="https://img-blog.csdn.net/20180621205056474?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>如果A，B都减小宽度，A设置flex-shirk为3，B设置flex-shirk为2。则最终A的大小为 自身宽度(200px)- A减小的宽度(100px * (200px * 3/(200 * 3 + 300 * 2))) = 150px,最终B的大小为 自身宽度(300px)- B减小的宽度(100px * (300px * 2/(200 * 3 + 300 * 2))) = 250px</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.inner</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span>             <span class="token property">flex-shrink</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.inner1</span></span><span class="token punctuation">{</span>            <span class="token property">flex-basis</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>            <span class="token property">flex-shrink</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>见下图：</p><p><img src="https://img-blog.csdn.net/20180621205513272?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p><img src="https://img-blog.csdn.net/2018062120552815?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDU4NzE0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>这里小编明确一点，flex是flex-grow，flex-shrink,  flex-basis  (注意小编写的顺序)缩写形式，大家可以记一下下面的缩写规则：</p><p>如：flex 取值为 none，则计算值为 0 0 auto，如下是等同的：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>    <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">当 flex取值为 auto，则计算值为 1 1 auto，如下是等同的：<span class="token class">.item</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>    <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>当 flex 取值为一个非负数字，则该数字为 flex-grow 值，flex-shrink 取 1，flex-basis 取 0%，如下是等同的：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span><span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">0%</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>当 flex 取值为一个长度或百分比，则视为 flex-basis 值，flex-grow 取 1，flex-shrink取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字）：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">0%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">0%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item-2</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item-2</span> </span><span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>当 flex取值为两个非负数字，则分别视为 flex-grow和 flex-shrink的值，flex-basis取 0%，如下是等同的：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">0%</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>当 flex取值为一个非负数字和一个长度或百分比，则分别视为 flex-grow和 flex-basis的值，flex-shrink取 1，如下是等同的：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">2333</span> <span class="token number">3222</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>    <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">2333</span><span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">3222</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>————————————————<br>版权声明：本文为CSDN博主「wxk_前端开发」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/m0_37058714/article/details/80765562" target="_blank" rel="noopener">https://blog.csdn.net/m0_37058714/article/details/80765562</a></p><h3 id="Flexbox-tips"><a href="#Flexbox-tips" class="headerlink" title="Flexbox tips:"></a>Flexbox tips:</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">order</span><span class="token punctuation">:</span><span class="token number">3</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">order</span><span class="token punctuation">:</span><span class="token number">1</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">order</span><span class="token punctuation">:</span><span class="token number">2</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>结果:B C A    在flexbox中的flexitem可以用order属性排序。</code></pre><p>view-port                                                                                                                         </p><p>view-height:vh</p><p>view-width:vw                                                                                                                    </p><p>​    如设置width:70vw则该元素的宽度会一直为视窗宽度的70%</p><h2 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h2><p><img src="https://wx4.sinaimg.cn/mw690/006AeIDuly1g9js3pje8uj30y40hf46e.jpg" alt="img"></p><p><img src="https://wx2.sinaimg.cn/mw690/006AeIDuly1g9js398m9pj30yb0hxamk.jpg" alt="img"></p><h3 id="grid-template-columns-grid-template-rows"><a href="#grid-template-columns-grid-template-rows" class="headerlink" title="grid-template-columns,grid-template-rows"></a>grid-template-columns,grid-template-rows</h3><p>容器指定了网格布局以后，接着就要划分行和列。</p><p>grid-template-columns:定义每一列的列宽</p><p>grid-template-rows属性定义每一行的行高。</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token number">100</span>px <span class="token number">100</span>px <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token number">100</span>px <span class="token number">100</span>px <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><a href="https://jsbin.com/qiginur/edit?css,output" target="_blank" rel="noopener">上面代码</a>指定了一个三行三列的网格，列宽和行高都是<code>100px</code>。</p><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032506.png" alt="img"></p><p>除了使用绝对单位，也可以使用百分比。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token number">33.33%</span> <span class="token number">33.33%</span> <span class="token number">33.33%</span><span class="token punctuation">;</span>  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token number">33.33%</span> <span class="token number">33.33%</span> <span class="token number">33.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><h3 id="justify-content-属性，-align-content-属性，-place-content-属性"><a href="#justify-content-属性，-align-content-属性，-place-content-属性" class="headerlink" title="justify-content 属性， align-content 属性， place-content 属性"></a>justify-content 属性， align-content 属性， place-content 属性</h3><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置（左中右），<code>align-content</code>属性是整个内容区域的垂直位置（上中下）。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> start | end | center | stretch | space-around | space-between | space-evenly<span class="token punctuation">;</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> start | end | center | stretch | space-around | space-between | space-evenly<span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre></blockquote><p>这两个属性的写法完全相同，都可以取下面这些值。（下面的图都以<code>justify-content</code>属性为例，<code>align-content</code>属性的图完全一样，只是将水平方向改成垂直方向。）</p><blockquote><ul><li>start - 对齐容器的起始边框。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032519.png" alt="img"></p><blockquote><ul><li>end - 对齐容器的结束边框。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032518.png" alt="img"></p><blockquote><ul><li>center - 容器内部居中。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032520.png" alt="img"></p><blockquote><ul><li>stretch - 项目大小没有指定时，拉伸占据整个网格容器。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032521.png" alt="img"></p><blockquote><ul><li>space-around - 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032522.png" alt="img"></p><blockquote><ul><li>space-between - 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032523.png" alt="img"></p><blockquote><ul><li>space-evenly - 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li></ul></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032524.png" alt="img"></p><p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token property">place-content</span><span class="token punctuation">:</span> &lt;align-content> &lt;justify-content></code></pre></blockquote><p>下面是一个例子。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token property">place-content</span><span class="token punctuation">:</span> space-around space-evenly<span class="token punctuation">;</span></code></pre></blockquote><p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p><h3 id="grid-row-gap-属性，-grid-column-gap-属性，-grid-gap-属性"><a href="#grid-row-gap-属性，-grid-column-gap-属性，-grid-gap-属性" class="headerlink" title="grid-row-gap 属性， grid-column-gap 属性， grid-gap 属性"></a>grid-row-gap 属性， grid-column-gap 属性， grid-gap 属性</h3><p><code>grid-row-gap</code>属性设置行与行的间隔（行间距），<code>grid-column-gap</code>属性设置列与列的间隔（列间距）。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-row-gap</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">grid-column-gap</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p><a href="https://jsbin.com/mezufab/edit?css,output" target="_blank" rel="noopener">上面代码</a>中，<code>grid-row-gap</code>用于设置行间距，<code>grid-column-gap</code>用于设置列间距。</p><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032511.png" alt="img"></p><p><code>grid-gap</code>属性是<code>grid-column-gap</code>和<code>grid-row-gap</code>的合并简写形式，语法如下。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token property">grid-gap</span><span class="token punctuation">:</span> &lt;grid-row-gap> &lt;grid-column-gap><span class="token punctuation">;</span></code></pre></blockquote><p>因此，上面一段 CSS 代码等同于下面的代码。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-gap</span><span class="token punctuation">:</span> <span class="token number">20</span>px <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>如果<code>grid-gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</p><h3 id="grid-column-start-属性，-grid-column-end-属性，-grid-row-start-属性，-grid-row-end-属性"><a href="#grid-column-start-属性，-grid-column-end-属性，-grid-row-start-属性，-grid-row-end-属性" class="headerlink" title="grid-column-start 属性， grid-column-end 属性， grid-row-start 属性， grid-row-end 属性"></a>grid-column-start 属性， grid-column-end 属性， grid-row-start 属性， grid-row-end 属性</h3><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p><blockquote><ul><li>grid-column-start属性：左边框所在的垂直网格线</li><li>grid-column-end属性：右边框所在的垂直网格线</li><li><code>grid-row-start</code>属性：上边框所在的水平网格线</li><li>grid-row-end属性：下边框所在的水平网格线</li></ul></blockquote><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column-start</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token property">grid-column-end</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p><a href="https://jsbin.com/yukobuf/edit?css,output" target="_blank" rel="noopener">上面代码</a>指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。</p><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032526.png" alt="img"></p><p>上图中，只指定了1号项目的左右边框，没有指定上下边框，所以会采用默认位置，即上边框是第一根水平网格线，下边框是第二根水平网格线。</p><p>除了1号项目以外，其他项目都没有指定位置，由浏览器自动布局，这时它们的位置由容器的<code>grid-auto-flow</code>属性决定，这个属性的默认值是<code>row</code>，因此会”先行后列”进行排列。读者可以把这个属性的值分别改成<code>column</code>、<code>row dense</code>和<code>column dense</code>，看看其他项目的位置发生了怎样的变化。</p><p><a href="https://jsbin.com/nagobey/edit?html,css,output" target="_blank" rel="noopener">下面的例子</a>是指定四个边框位置的效果。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column-start</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token property">grid-column-end</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">grid-row-start</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token property">grid-row-end</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032527.png" alt="img"></p><p>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column-start</span><span class="token punctuation">:</span> header-start<span class="token punctuation">;</span>  <span class="token property">grid-column-end</span><span class="token punctuation">:</span> header-end<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。</p><p>这四个属性的值还可以使用<code>span</code>关键字，表示”跨越”，即左右边框（上下边框）之间跨越多少个网格。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column-start</span><span class="token punctuation">:</span> span <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p><a href="https://jsbin.com/hehumay/edit?html,css,output" target="_blank" rel="noopener">上面代码</a>表示，1号项目的左边框距离右边框跨越2个网格。</p><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032528.png" alt="img"></p><p>这与<a href="https://jsbin.com/mujihib/edit?html,css,output" target="_blank" rel="noopener">下面的代码</a>效果完全一样。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column-end</span><span class="token punctuation">:</span> span <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>使用这四个属性，如果产生了项目的重叠，则使用<code>z-index</code>属性指定项目的重叠顺序。</p><h3 id="grid-column-属性，-grid-row-属性"><a href="#grid-column-属性，-grid-row-属性" class="headerlink" title="grid-column 属性， grid-row 属性"></a>grid-column 属性， grid-row 属性</h3><p><code>grid-column</code>属性是<code>grid-column-start</code>和<code>grid-column-end</code>的合并简写形式，<code>grid-row</code>属性是<code>grid-row-start</code>属性和<code>grid-row-end</code>的合并简写形式。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column</span><span class="token punctuation">:</span>  / <span class="token punctuation">;</span>  <span class="token property">grid-row</span><span class="token punctuation">:</span>  / <span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>下面是一个例子。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column</span><span class="token punctuation">:</span> <span class="token number">1</span> / <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">grid-row</span><span class="token punctuation">:</span> <span class="token number">1</span> / <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 等同于 */</span><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column-start</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token property">grid-column-end</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">grid-row-start</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token property">grid-row-end</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>上面代码中，项目<code>item-1</code>占据第一行，从第一根列线到第三根列线。</p><p>这两个属性之中，也可以使用<code>span</code>关键字，表示跨越多少个网格。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#b03532</span><span class="token punctuation">;</span>  <span class="token property">grid-column</span><span class="token punctuation">:</span> <span class="token number">1</span> / <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">grid-row</span><span class="token punctuation">:</span> <span class="token number">1</span> / <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 等同于 */</span><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#b03532</span><span class="token punctuation">;</span>  <span class="token property">grid-column</span><span class="token punctuation">:</span> <span class="token number">1</span> / span <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token property">grid-row</span><span class="token punctuation">:</span> <span class="token number">1</span> / span <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p><a href="https://jsbin.com/volugow/edit?html,css,output" target="_blank" rel="noopener">上面代码</a>中，项目<code>item-1</code>占据的区域，包括第一行 + 第二行、第一列 + 第二列。</p><p><img src="https://www.wangbase.com/blogimg/asset/201903/bg2019032529.png" alt="img"></p><p>斜杠以及后面的部分可以省略，默认跨越一个网格。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-column</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token property">grid-row</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>上面代码中，项目<code>item-1</code>占据左上角第一个网格。</p><h3 id="grid-area-属性"><a href="#grid-area-属性" class="headerlink" title="grid-area 属性"></a>grid-area 属性</h3><p><code>grid-area</code>属性指定项目放在哪一个区域。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-area</span><span class="token punctuation">:</span> e<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p><a href="https://jsbin.com/qokexob/edit?css,output" target="_blank" rel="noopener">上面代码</a>中，1号项目位于<code>e</code>区域，效果如下图。</p><p><img src="https://wx2.sinaimg.cn/mw690/006AeIDuly1g9jt6wxf3pj30ar0awq2u.jpg" alt="img"></p><p><code>grid-area</code>属性还可用作<code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code>的合并简写形式，直接指定项目的位置。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-area</span><span class="token punctuation">:</span> &lt;row-start> / &lt;column-start> / &lt;row-end> / &lt;column-end><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><p>下面是一个<a href="https://jsbin.com/duyafez/edit?css,output" target="_blank" rel="noopener">例子</a>。</p><blockquote><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item-1</span> </span><span class="token punctuation">{</span>  <span class="token property">grid-area</span><span class="token punctuation">:</span> <span class="token number">1</span> / <span class="token number">1</span> / <span class="token number">3</span> / <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><h3 id="Grid-tips"><a href="#Grid-tips" class="headerlink" title="Grid tips:"></a>Grid tips:</h3><p>注意，设为网格布局以后，容器子元素（项目）的<code>float</code>、<code>display: inline-block</code>、<code>display: table-cell</code>、<code>vertical-align</code>和<code>column-*</code>等设置都将失效。</p><blockquote><p>根据最新标准，上面三个属性名的grid-前缀已经删除，grid-column-gap和grid-row-gap写成column-gap和row-gap，grid-gap写成gap。</p></blockquote><p>以上摘抄自<a href="http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html</a></p><p>更详细的grid信息访问:<a href="http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html</a></p><h2 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h2><p>如</p><pre class=" language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@keyframes</span> change-color</span><span class="token punctuation">{</span>    <span class="token selector">from</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>salmon<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">to</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>lightblue<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">然后在选择器内:例如<span class="token pseudo-class">:box-animation</span></span><span class="token punctuation">{</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span>change-color<span class="token punctuation">;</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span><span class="token number">4</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span>上述效果会使用了该样式的元素的背景颜色在<span class="token number">4</span>s内由salmon变为lightblue，一旦完成这一动画会立马变回salmon</code></pre><p>animation 属性是一个简写属性，用于设置六个动画属性：</p><ul><li>animation-name                        规定需要绑定到选择器的 keyframe 名称。</li><li>animation-duration                   规定完成动画所花费的时间，以秒或毫秒计。</li><li>animation-timing-function       规定动画的速度曲线。</li><li>animation-delay                        规定在动画开始之前的延迟。</li><li>animation-iteration-count       规定动画应该播放的次数。</li><li>animation-direction                  规定是否应该轮流反向播放动画。</li></ul><table><thead><tr><th align="left">默认值：</th><th>none 0 ease 0 1 normal</th></tr></thead><tbody><tr><td align="left">继承性：</td><td>no</td></tr><tr><td align="left">版本：</td><td>CSS3</td></tr><tr><td align="left">JavaScript 语法：</td><td><em>object</em>.style.animation=”mymove 5s infinite”</td></tr></tbody></table><p>语法：</p><pre class=" language-css"><code class="language-css"><span class="token property">animation</span><span class="token punctuation">:</span> name duration timing-function delay iteration-count direction<span class="token punctuation">;</span></code></pre><p>animation-iteration-count:infinite;    一直循环动画</p><p>​                                             :3；    播放动画三次。</p><h3 id="Animation-tips"><a href="#Animation-tips" class="headerlink" title="Animation tips:"></a>Animation tips:</h3><p>要始终注意规定animation-duration属性否则默认时长为0不会播放动画。</p><p>还可以:</p><pre class=" language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@keyframes</span> change-color</span><span class="token punctuation">{</span>    <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>salmon<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">10%</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>lightblue<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">...</span>    100%</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>用百分数来控制动画也是可行的。</code></pre><p>animation-delay:2s;    则会延迟2s动画开始的时间(可取负值)。</p><hr><p>animation-timing-function</p><table><thead><tr><th>linear</th><th>动画从头到尾的速度是相同的。</th></tr></thead><tbody><tr><td>ease</td><td>默认。动画以低速开始，然后加快，在结束前变慢。</td></tr><tr><td>ease-in</td><td>动画以低速开始。</td></tr><tr><td>ease-out</td><td>动画以低速结束。</td></tr><tr><td>ease-in-out</td><td>动画以低速开始和结束。</td></tr><tr><td>cubic-bezier(<em>n</em>,<em>n</em>,<em>n</em>,<em>n</em>)</td><td>在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</td></tr></tbody></table><hr><p>animation-direction:normal;                            默认值。动画按正常播放。</p><p>​                                     reverse;                           动画反向播放。</p><p>​                                    alternate;                        动画在奇数次（1、3、5…）正向播放,在偶数次（2、4、6…）反向播放。</p><p>​                                    alternate-reverse;         动画在奇数次（1、3、5…）反向播放，在偶数次（2、4、6…）正向播放。</p><p>​                                    inherit;                            从父元素继承该属性。</p><h2 id="Transition-Property"><a href="#Transition-Property" class="headerlink" title="Transition Property"></a>Transition Property</h2><p>用伪类选择器时适合用这个属性来创造更舒适的非线性动画。</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><p>transition: <em>property duration timing-function delay</em>;</p><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-transition-property.html" target="_blank" rel="noopener">transition-property</a></em></td><td align="left">指定CSS属性的name，transition效果</td></tr><tr><td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-transition-duration.html" target="_blank" rel="noopener">transition-duration</a></em></td><td align="left">transition效果需要指定多少秒或毫秒才能完成</td></tr><tr><td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-transition-timing-function.html" target="_blank" rel="noopener">transition-timing-function</a></em></td><td align="left">指定transition效果的转速曲线</td></tr><tr><td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-transition-delay.html" target="_blank" rel="noopener">transition-delay</a></em></td><td align="left">定义transition效果开始的时候</td></tr></tbody></table><table><thead><tr><th align="left">默认值：</th><th>all 0 ease 0</th></tr></thead><tbody><tr><td align="left">继承：</td><td>no</td></tr><tr><td align="left">版本：</td><td>CSS3</td></tr><tr><td align="left">JavaScript 语法：</td><td><em>object</em>.style.transition=”width 2s”</td></tr></tbody></table><h3 id="transition-timing-function"><a href="#transition-timing-function" class="headerlink" title="transition- timing-function"></a>transition- timing-function</h3><p>transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(<em>n</em>,<em>n</em>,<em>n</em>,<em>n</em>);</p><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">linear</td><td align="left">规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。</td></tr><tr><td align="left">ease</td><td align="left">规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。</td></tr><tr><td align="left">ease-in</td><td align="left">规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。</td></tr><tr><td align="left">ease-out</td><td align="left">规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。</td></tr><tr><td align="left">ease-in-out</td><td align="left">规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。</td></tr><tr><td align="left">cubic-bezier(<em>n</em>,<em>n</em>,<em>n</em>,<em>n</em>)</td><td align="left">在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。</td></tr></tbody></table><h3 id="transition-tips"><a href="#transition-tips" class="headerlink" title="transition tips:"></a>transition tips:</h3><p> 始终指定transition-duration属性，否则持续时间为0，transition不会有任何效果。</p><h2 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h2><p>transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</p><table><thead><tr><th align="left">默认值：</th><th>none</th></tr></thead><tbody><tr><td align="left">继承性：</td><td>no</td></tr><tr><td align="left">版本：</td><td>CSS3</td></tr><tr><td align="left">JavaScript 语法：</td><td><em>object</em>.style.transform=”rotate(7deg)”</td></tr></tbody></table><pre class=" language-css"><code class="language-css"><span class="token property">transform</span><span class="token punctuation">:</span> none|transform-functions<span class="token punctuation">;</span></code></pre><h3 id="transform-functions："><a href="#transform-functions：" class="headerlink" title="transform-functions："></a>transform-functions：</h3><h4 id="移动translate"><a href="#移动translate" class="headerlink" title="移动translate"></a>移动translate</h4><p>我们分为三种情况：translate(x,y)水平方向和垂直方向同时移动（也就是X轴和Y轴同时移动）；translateX(x)仅水平方向移动（X轴移动）；translateY(Y)仅垂直方向移动（Y轴移动），具体使用方法如下：</p><p>1、translate(<code>&lt;translation-value&gt;, &lt;translation-value&gt;</code>) ：通过矢量[tx, ty]指定一个2D translation，tx 是第一个过渡值参数，ty 是第二个过渡值参数选项。如果 未被提供，则ty以 0 作为其值。也就是translate(x,y),它表示对象进行平移，按照设定的x,y参数值,当值为负数时，反方向移动物体，其基点默认为元素 中心点，也可以根据transform-origin进行改变基点。如transform:translate(100px,20px):</p><p><img src="http://cdn.w3cplus.com/cdn/farfuture/cpg1_ccfmJB3YCskfTY4wafGLRW_PqZ_hmTATY0bLhI/mtime:1341237813/sites/default/files/translate-x-y.png" alt="img"></p><p>2、translateX(<code>&lt;translation-value&gt;</code>) ： 通过给定一个X方向上的数目指定一个translation。只向x轴进行移动元素，同样其基点是元素中心点，也可以根据transform-origin改变基点位置。如：transform:translateX(100px):</p><p><img src="http://cdn.w3cplus.com/cdn/farfuture/xmWvEQJv1-SDS31NWYdMZCm5Y-mFhmVeov3byX8xQGM/mtime:1341237813/sites/default/files/translate-x.png" alt="img"></p><p>3、translateY(<code>&lt;translation-value&gt;</code>) ：通过给定Y方向的数目指定一个translation。只向Y轴进行移动，基点在元素心点，可以通过transform-origin改变基点位置。如：transform:translateY(20px):</p><h4 id="缩放scale"><a href="#缩放scale" class="headerlink" title="缩放scale"></a><strong>缩放scale</strong></h4><p>缩放scale和移动translate是极其相似，他也具有三种情况：scale(x,y)使元素水平方向和垂直方向同时缩放（也就是X轴和Y轴同时缩放）；scaleX(x)元素仅水平方向缩放（X轴缩放）；scaleY(y)元素仅垂直方向缩放（Y轴缩放），但它们具有相同的缩放中心点和基数，其中心点就是元素的中心位置，缩放基数为1，如果其值大于1元素就放大，反之其值小于1，元素缩小。下面我们具体来看看这三种情况具体使用方法：</p><p>1、scale(<code>&lt;number&gt;[, &lt;number&gt;]</code>)：提供执行[sx,sy]缩放矢量的两个参数指定一个2D scale（2D缩放）。如果第二个参数未提供，则取与第一个参数一样的值。scale(X,Y)是用于对元素进行缩放，可以通过transform-origin对元素的基点进行设置，同样基点在元素中心位置；基中X表示水平方向缩放的倍数，Y表示垂直方向的缩放倍数，而Y是一个可选参数，如果没有设置Y值，则表示X，Y两个方向的缩放倍数是一样的。并以X为准。如：transform:scale(2,1.5):</p><p><img src="http://cdn.w3cplus.com/cdn/farfuture/OVgmVMi2MDjTG8KSooxaZIJEzSbTqHPuD3lgcM1Ahvk/mtime:1341237776/sites/default/files/scale-x-y.png" alt="img"></p><p>2、scaleX(<code>&lt;number&gt;</code>) ： 使用 [sx,1] 缩放矢量执行缩放操作，sx为所需参数。scaleX表示元素只在X轴(水平方向)缩放元素，他的默认值是(1,1)，其基点一样是在元素的中心位置，我们同样是通过transform-origin来改变元素的基点。如：transform:scaleX(2):</p><p><img src="http://cdn2.w3cplus.com/cdn/farfuture/GwlGkCboT7jfuw8Y_EtqY07GMcDUMNEt4Y2kj61FcD8/mtime:1341237776/sites/default/files/scale-x.png" alt="img"></p><p>3、scaleY(<code>&lt;number&gt;</code>) ： 使用 [1,sy] 缩放矢量执行缩放操作，sy为所需参数。scaleY表示元素只在Y轴（垂直方向）缩放元素，其基点同样是在元素中心位置，可以通过transform-origin来改变元素的基点。如transform:scaleY(2):</p><p><img src="http://cdn1.w3cplus.com/cdn/farfuture/-h73QRWTLl4beHBNxbo8IxCBPalKqtRRoAyaGAksQW8/mtime:1341237776/sites/default/files/scale-y.png" alt="img"></p><h4 id="旋转rotate"><a href="#旋转rotate" class="headerlink" title="旋转rotate"></a><strong>旋转rotate</strong></h4><p>rotate(<code>&lt;angle&gt;</code>) ：通过指定的角度参数对原元素指定一个2D rotation（2D 旋转），需先有transform-origin属性的定义。transform-origin定义的是旋转的基点，其中angle是指旋转角度，如果设置的值为正数表示顺时针旋转，如果设置的值为负数，则表示逆时针旋转。如：transform:rotate(30deg):</p><p><img src="http://cdn1.w3cplus.com/cdn/farfuture/z_h-BB20wAjCAy2velbYrqK8CVIUstAOR_uOb_5RMkM/mtime:1341237776/sites/default/files/rotate.png" alt="img"></p><h4 id="扭曲skew"><a href="#扭曲skew" class="headerlink" title="扭曲skew"></a><strong>扭曲skew</strong></h4><p>扭曲skew和translate、scale一样同样具有三种情况：skew(x,y)使元素在水平和垂直方向同时扭曲（X轴和Y轴同时按一定的角度值进行扭曲变形）；skewX(x)仅使元素在水平方向扭曲变形（X轴扭曲变形）；skewY(y)仅使元素在垂直方向扭曲变形（Y轴扭曲变形），具体使用如下：</p><p>1、skew(<code>&lt;angle&gt; [, &lt;angle&gt;</code>]) ：X轴Y轴上的skew transformation（斜切变换）。第一个参数对应X轴，第二个参数对应Y轴。如果第二个参数未提供，则值为0，也就是Y轴方向上无斜切。skew是用来对元素进行扭曲变行，第一个参数是水平方向扭曲角度，第二个参数是垂直方向扭曲角度。其中第二个参数是可选参数，如果没有设置第二个参数，那么Y轴为0deg。同样是以元素中心为基点，我们也可以通过transform-origin来改变元素的基点位置。如：transform:skew(30deg,10deg):</p><p><img src="http://cdn1.w3cplus.com/cdn/farfuture/L_YIhJ0lb-t2WzPPcxliu82nnLN0OL7BTm6Rao3X7_0/mtime:1341237780/sites/default/files/skew-x-y.png" alt="img"></p><p>2、skewX(<code>&lt;angle&gt;</code>) ： 按给定的角度沿X轴指定一个skew transformation（斜切变换）。skewX是使元素以其中心为基点，并在水平方向（X轴）进行扭曲变行，同样可以通过transform-origin来改变元素的基点。如：transform:skewX(30deg)</p><p><img src="http://cdn1.w3cplus.com/cdn/farfuture/JnUewTlzfSZsJhlDYUuPiVXpM6wuagEgpFkSorwtk6k/mtime:1341237780/sites/default/files/skew-x.png" alt="img"></p><p>3、skewY(<code>&lt;angle&gt;</code>) ： 按给定的角度沿Y轴指定一个skew transformation（斜切变换）。skewY是用来设置元素以其中心为基点并按给定的角度在垂直方向（Y轴）扭曲变形。同样我们可以通过transform-origin来改变元素的基点。如：transform:skewY（10deg）</p><p><img src="http://cdn.w3cplus.com/cdn/farfuture/NEOscxx3CZUOpk6R3GBgzSEbkZg8OcC5WfrKdjnko4k/mtime:1341237781/sites/default/files/skew-y.png" alt="img"></p><p>skew的图中xy轴是错的，但方法是对的，主要理解扭曲的原理。</p><h4 id="矩阵matrix"><a href="#矩阵matrix" class="headerlink" title="矩阵matrix"></a>矩阵matrix</h4><p>matrix(<code>&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;</code>) ： 以一个含六值的(a,b,c,d,e,f)变换矩阵的形式指定一个2D变换，相当于直接应用一个[a b c d e f]变换矩阵。就是基于水平方向（X轴）和垂直方向（Y轴）重新定位元素,此属性值使用涉及到数学中的矩阵。更详细的矩阵资料访问:<a href="[https://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%e7%9f%a9%e9%98%b5/](https://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-矩阵/)"><a href="https://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-矩阵/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%e7%9f%a9%e9%98%b5/</a></a></p><h2 id="Import"><a href="#Import" class="headerlink" title="Import"></a>Import</h2><h3 id="css中link和import区别"><a href="#css中link和import区别" class="headerlink" title="css中link和import区别:"></a>css中link和import区别:</h3><ol><li>link属于html标签，而import是css提供的。</li><li>页面被加载的时候，link会同时被加载，而import引用的css会等到页面被加载完成后加载</li><li>import只在IE5以上才能识别，而link是html标签无兼容问题。</li><li>link方式的样式权重高于import的权重。</li></ol><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>在.css文件中:@import”name of other css file”</p><h2 id="Browser-support"><a href="#Browser-support" class="headerlink" title="Browser support"></a>Browser support</h2><p>网页要兼容多种类的浏览器，可以到网上查CSS Browser Support Reference</p><p>如<a href="https://www.w3schools.com/cssref/css3_browsersupport.asp" target="_blank" rel="noopener">https://www.w3schools.com/cssref/css3_browsersupport.asp</a></p><h2 id="Css-Framework"><a href="#Css-Framework" class="headerlink" title="Css Framework"></a>Css Framework</h2><p>download file or use CDN    如bootstrap</p><h2 id="参考的视频"><a href="#参考的视频" class="headerlink" title="参考的视频:"></a>参考的视频:</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/WZ2uqGkHoR0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><iframe width="560" height="315" src="https://www.youtube.com/embed/1Rs2ND1ryYc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2019/11/16/html-de-zhi-shi-chu-bei/"/>
      <url>/2019/11/16/html-de-zhi-shi-chu-bei/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML:"></a>HTML:</h1><h2 id="1-结构："><a href="#1-结构：" class="headerlink" title="1.结构："></a>1.结构：</h2><p>​    </p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>        声明文档类型 - document type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    主要用于声明<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    存放主要内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>​            </p><h2 id="2-标签-tags"><a href="#2-标签-tags" class="headerlink" title="2.标签 - tags"></a>2.标签 - tags</h2><p>​        </p><pre class=" language-html"><code class="language-html">双标签：                            单标签：single tag<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span> break 空行   ...                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span> horizontal rule 水平分割线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>big</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>big</span><span class="token punctuation">></span></span>    使tag内的字体变大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sub</span><span class="token punctuation">></span></span>    下标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sup</span><span class="token punctuation">></span></span> 上标注释:comment<span class="token comment" spellcheck="true">&lt;!-- comment --></span></code></pre><h2 id="3-Styles-amp-colors"><a href="#3-Styles-amp-colors" class="headerlink" title="3.Styles &amp; colors"></a>3.Styles &amp; colors</h2><pre class=" language-html"><code class="language-html">css: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xx</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xx</span><span class="token punctuation">></span></span>具体的颜色名称或者数值可以到网上查询颜色表</code></pre><h2 id="4-Layout-pages"><a href="#4-Layout-pages" class="headerlink" title="4.Layout pages"></a>4.Layout pages</h2><pre class=" language-html"><code class="language-html">一般网站的3个sections:从顶部往下依次是:header,main,foot三个区域一般来说网站都会这样配置:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span> 导航条tag<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span> 文章tag    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>     section tag与article tag搭配使用效果更好        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>            content        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foot</span><span class="token punctuation">></span></span>    脚注<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>        这种使用方式并非必须，但在一般情况下是最好的选择。    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>            content        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>    通常用于放广告（与核心内容无关）</code></pre><h1 id="html-body-width-100-height-100-的解释"><a href="#html-body-width-100-height-100-的解释" class="headerlink" title="html,body{ width: 100%;height: 100%;}的解释"></a>html,body{ width: 100%;height: 100%;}的解释</h1><p>没有设置body的宽高，所以它的高度由所包含的元素高度决定，而它所包含的元素高度没有达到撑满屏幕的高度，所以显示出body的高度没有撑满屏幕， body 的 display 为 block。</p><p>按道理，子元素百分比是以父元素为标准，那么问题来了，html有父元素吗？</p><p>html{ width: 100%;height: 100%;}拿谁的宽高？</p><p>经过测试，是当前浏览器窗口的大小</p><p>宽度100%不用写，可以继承，但是如果不写height,就会得不到可视区域的高度</p><h2 id="5-Links"><a href="#5-Links" class="headerlink" title="5.Links:"></a>5.Links:</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> href:Hypertext Reference<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>默认在本页打开，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>在新页面打开href中开头若不加https/http则默认使用relative url</code></pre><h2 id="6-Images"><a href="#6-Images" class="headerlink" title="6.Images:"></a>6.Images:</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> single tag<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>有时候图片有大小问题，就可以使用width/height属性控制img缩放Pixel不是一个绝对的长度，只是相对于屏幕而言若只设置width/height,则浏览器会依据原先的长宽比来缩放图像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>可以把链接加在图像上</code></pre><h2 id="7-Videos"><a href="#7-Videos" class="headerlink" title="7.Videos"></a>7.Videos</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>若无controls参数则视频不能播放，无进度条组件缩放video的方法与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token punctuation">></span></span>一样可以用poster="url"来设置video的thumbnail(预览图)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>自动播放但有些高版本浏览器须静音后才能自动播放<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">autoplay</span> <span class="token attr-name">muted</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">loop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>循环播放</code></pre><h2 id="8-Lists"><a href="#8-Lists" class="headerlink" title="8.Lists"></a>8.Lists</h2><pre class=" language-html"><code class="language-html">unorder list:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                    .xxxxx    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            .xxxxx    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            .xxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>order list:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>                    1 xxxx    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            2 xxxx    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            3 xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            a xxxx                        b xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    c xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            A xxxx                        B xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    C xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>I<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            I xxxx                        II xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    III xxxxtype="i"同理list可以嵌套:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>I<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>还有一种description lists:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>        dt    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>          dd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>dd中开头加"-"效果会更好  dt                        -dt</code></pre><h2 id="9-Tables"><a href="#9-Tables" class="headerlink" title="9.Tables"></a>9.Tables</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    table row        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> table data    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span> table head        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>可以在table的第一行定义th<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span> caption中可以加table的说明    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>        使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>能让阅读html的人从html角度看表格        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    更容易            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>colspan: column span<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>该行将占据2列的width</code></pre><h2 id="10-Div-amp-Span"><a href="#10-Div-amp-Span" class="headerlink" title="10.Div &amp; Span"></a>10.Div &amp; Span</h2><pre class=" language-html"><code class="language-html">containers in HTMLtwo basic ways of HTML display:Block &amp; inlineBlock elements:占据一整行inline elements:占据自身的宽度Span: inline container<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>s1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>s2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        s1 s2Div:block container<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>d1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>d2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        d1 d2</code></pre><h2 id="11-Input-amp-Form"><a href="#11-Input-amp-Form" class="headerlink" title="11.Input &amp; Form"></a>11.Input &amp; Form</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>type="password"type="date"type="email"type="range"type="file"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> 有多个小方框可以被同时选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    同一组只能有一个小圆框被选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>可以到网上查询所有的input的type值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>value的值作为input的默认值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这里可以放默认值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>Form主要用于组织input</code></pre><h2 id="12-iFrame"><a href="#12-iFrame" class="headerlink" title="12.iFrame"></a>12.iFrame</h2><p>iFrame的功能是嵌入其他网站，但有些网站出于流量与安全的角度考虑就不能被使用。如亚马逊购物网。</p><h2 id="13-Meta-tag"><a href="#13-Meta-tag" class="headerlink" title="13.Meta tag"></a>13.Meta tag</h2><pre class=" language-html"><code class="language-html">meta data:data about dataeg:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 能使网页自适应浏览器窗口</code></pre><iframe width="560" height="315" src="https://www.youtube.com/embed/pQN-pnXPaVg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
